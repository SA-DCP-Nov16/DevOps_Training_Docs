
###############
6th Dec. 2023
###############	
		
Module 2 ::::

		Overview of Module 2 ::
		
		Pre-requisites for Lab Practise.

Application Development Fundamentals
4hrs
• Overview of Application Development
• Various Types of Application
• Introduction to Databases
• Multi-tiered application architecture
• Overview of Monolithic and Microservices
				
				
		
		List of Tools :::
		
			Eclipse IDE - for Enterprise Java and Web Developers.
				Configure Tomcat Web Application Server 
				GIT 
				Unit Test Tools like JUnit.
				
			Java Console Application. 
			Java Web Application.
					Maven build Tool.
						Compile and create artifacts.
					Web Application framework - springboot 	
					
			Python Console Application.
			Python Web Application 
					Web Application framework - flask
			
			Visual Studio Code IDE.
			
			.Net Framework --> c#.net asp.net 
			
		
		Overview of Application Development :::
		
				Application Development 
				
				Application ????
				
				Software  ---> What ?
				
				
				Application/Software
						- It is a collection of programs.
						- Programs are the collection instructions to perform desired tasks.
				Business Applications ::
						- Programming Languages like : C,C++,Java,VB,C#,Python
						
				How to develop the application ???
				
					Follows SDLC Process :
						Requirement Analysis/Design/Coding/Testing/Implementation/Maintainence
					
				Developers' Perspective :::
				
					Desktop
					Web Application 


###############
7th Dec. 2023
###############			

		Application Development :
		
			Java 
			Python 
			
		-> Business Application : Domain 
				Banking Application
				Finance 
				HealthCare
				Retail
				Insurance 
		
		-> Programming Languages like : Java/Python/.Net ...
		
		
			Dev Machine :
				Install all the Development tools :
					IDE - Eclipse - Integrated Development Environment
					Programming Language - JDK - Java Development Kit
					Source Code Management Tool - GIT
					Web Application Server -- To Execute/Test the Application 
						- Tomcat 
					
					



	Tool: 
		Develop --> IDE - Eclipse,GIT,JDK

	Windows Machine	::
	
	JDK :::
		https://jdk.java.net/java-se-ri/11
			- select window version
		Define Environment Variable in Windows Machine.
			C:\Software\jdk-11\bin
		
	Eclipse :::
		https://www.eclipse.org/downloads/
			Choose : Eclipse IDE for Enterprise Java and Web Developers  
	
	Tomcat :::
		https://tomcat.apache.org/download-80.cgi
	
	
###############
8th Dec. 2023
###############		
				
			- Demo -- JDK/Eclipse/Tomcat Installation process.
			
				- AWS - Windows Machine .
				
				
			JDK 
			
			Eclipse IDE 
			
			Tomcat 		- Web Application Server - Used to Run Java Web Applications.
			
			
			Discuss about Eclipse IDE 
				- Types of Java Projects ::
				
					Project :::: 
					
						Java Projects :::
						
							*.java ==> Notepad 
							save 
							javac 
							*.class 	==> Executable.
							
						Application :
								Desktop/Console/terminal Application 
									Billing System 
								Web Applications:
									Online Banking 
									E_Commerce
									
							
									
					
				
				- How the Java Applications are created and Build ?
				
						- Using Eclipse IDE
						
						- Java Console Application :
							
				
				
				- Which Build tool is used for build 
				
						Maven Project ::::
						
							Using Maven we can create java project 
							
							Java Project :
								Automate the Code Compilation 
								Create Artifacts 
								Perform Unit Testing 
				
							Maven Project :
								This project is based on Maven Build Tool
								This is to simply the process of code build & unit testing and package/artifacts creation
								It will automatically take care of all the dependencies and plugins needed for application build and testing.
								It used pom.xml file to maintain all the dependencies and plugins needed for application build and testing.
								
								Using the maven project methods, we can create dynamic web applications
								Use the Java Web Application Framework like Springboot.
							
							How Maven Works :
							
								- pom.xml (Project Object Model) ::
										pom.xml file is used to maintain all the dependencies and plugins needed for application build and testing.
								
								- Maven Goals ::
										The objective/Task that are to be performed ::
										
											user_registeration.java program
											Billing.java program
											
												compile 
												test 
												package 
												build 
												clean 
											
									As part of build the package are created and maintained in :
										targets/
											Billing.war / 
											
											*.war 		- Web Archive
											*.jar 		- java Archive 
											
											
								
								- Maven Repsitory -> Is a global/Central Repository from where all the dependencies and plugins are downloaded by maven project during build activity. 
							

						Developer ::
						
							Java web application project :
									Created in my machine. 
										jdk		
										
										eclipse  			- used to create the source code 
										Build Tool 			- to perform build the application
										Unit Testing tool 	- to perform unit testing
																	JUnit 
																	TestNG 
																	Selenium
								
							
							java program :: compiled 
				
				- Maven Build Tool and its capabilities.
	
						Using DevOps Approach :::
							- Create source code Update the code in a source code repository 
							
						DevOps take the responsibility : 
							- Automate build the code 
									Application Build :
										It is process of compiling the source code and creating artifacts.
										Artifacts are - Binaries (*.war,*.jar,*.exec,*.dll)										
							- Automate Create Artifacts
							- Automated unit testing 
							- Automate Promote the code to Testing Environments 
							- Automate the Notification - Notify the testing team to do further testing
					
						Tools : 
							Eclipse based IDEs(Integrated Development Environment) - Eclipse, Pycharm, Intellij
						DevOps Tools ::
							GIT, Jenkins, Build Tools(Maven,JUnit)
							
		goto to start menu :

			select eclipse and launch.
			
			Default workspace:
			
			
			Java_Web Project ::		Project Folder - Workspace 
				*.java 
				*.war 
				*.class 

							
Next :

		Maven Goal/Commands 
		Create Java Console and Web Applications using Maven 
		Create Java Maven Web Applications using Spring Boot Web Application Framework.
		

###############
11th Dec. 2023
###############	
	

		Maven Goal/Commands 
		Create Java Maven Web Applications using Spring Boot Web Application Framework.	
	
		Maven Build Tool :::
		
		Maven Commands/goal:

		Maven Goals :
			● mvn clean - to clean the target folder.
			● mvn compile - to compile the source code
			● mvn test - to compile and execute junit test cases
			● mvn package - to compile, test and package the application
			● mvn install - to install the package to local repository.
			● mvn deploy - to deploy the package from local repository to remote repository.
			
			
			mvn clean package 
			
				Continuous Integration :::
				
					Dev - created the src code 
					build/create artifacts & promote the code for further testing 
					
			
		Source Repository ==> src/pom.xml 
			Build ==> target/
						*.war
			
		Create Java Console and Web Application :
		
		Java Web Application Project :::
		
			mkdir scripts/
					*.sh 
					
		Maven Project Structure :::			# Java Maven Desktop/Console/terminal Application;

		MVN_Poject1				# Project Name 
			src 
				main			# Maintain the source code *.java - Business Logic 
					*.java
				test			# Maintain the Test Cases and Test Data - JUnit 
					*.java
			target
				artifacts *.war / *.jar
			pom.xml 			==> defines the application artifacts, plugins and all the required depedencies
			
				By using Maven Archetypes
			JRE_Libraries
			MVN_Libraries
	
		Maven Project Structure :::			# Java Maven  Web Application;

		MVN_Poject2				# Project Name 
			src 
				main			# Maintain the source code *.java - Business Logic 
					*.java
					*.java 
					*.java
				test			# Maintain the Test Cases and Test Data - JUnit 
					*.java
			resources
				webapp
					*.html 
					*.jsp
					*.css
			target
				artifacts *.war
			pom.xml 			==> defines the application artifacts, plugins and all the required depedencies
			
				By using Maven Archetypes
			JRE_Libraries
			MVN_Libraries	
			
			
		Eclipse IDE :
		
			Java is Object Oriented Programming Language :
			
			Artifacts ==> JVM - Java Virtual Machine		- Platform Independent Language
							It help to run/execute the java applications in any platform 
								Window/Linux/Mac
			
				OOPs Concepts :
					Class 
							- Functions and Variables.
					Objects
							- Instance of Class 
					Inheritance
					
					Abstraction
					
					Encapsulation
					
		
		
		Create a Java Console & Web Application Using Maven 
		
			1. Create New Project 
			Open Existing Project from the local machine
			Import the Existing Project from external machine/network/repo
			
			
			Archetype :::
			
				Template 
				
			Create a Project ::
				
				*.java 
				
				packages are collection of class/java programs 
		
		Create a Maven Console Application :
				Desktop Application :::	
						Group_ID
							org.apache.maven.archetype
						Artifact_ID
							maven-archetype-simple
						
		Create a Maven Web Application 
						Group_ID
							org.apache.maven.archetype
						Artifact_ID
							maven-archetype-webapp			
	
		Java maven Spring boot web application framework :
	
	
		Maven Repository : https://mvnrepository.com/
	
	
Next :

		Demo - Unit Test with Java application 
		
		Demo - Java maven Spring boot web application framework
	
		Python
		
		fundamentals of sql
	
	
###############
12th Dec. 2023
###############	


		Demo - Unit Test with Java application 
		
		Demo - Java maven Spring boot web application framework
		
		CI -> build, unit test 
		
		
		Testing ???
		
			What is the purpose of testing ??
			
		Requirement Analysis
		Design 
		Code	
		Testing 
		
		Dev 
		
		Build 
		
		Test 
		
			QA	- Quality Assurance Testing  
			UAT - User Acceptance Testing
			
		Prod.
		
		Eg.: 
		
			Create a program to perform basic arithmetic operation :
			
				num1 			5 			s		5 
				num2 			5 			t 		t
				operator 		+ - * /		#		&
				
				Output 			10 
				
			num1,num2,operator  		# Input validation
			
			output 						# result shd be based on the operator
		
		
			Test Cases / Scenarios 
					10 Scenarios 
			
			Test Data 
					5,5,*
					s,5,&
					
			Exception handling!
			
			Positive
			
			Negative path 
			
			DevOps Engineer ==> CI --> valid the Test Coverage!
											100% test coverage 
											failure cases 
											success cases 
											skipped ?
											
			JaCoCo 	==> Java Code Coverage Tool 
			
			In DevOps Perspective ::
			
				Shift Left Approach.
				
					==> It is a process of capturing & fixing all the issues/bugs/impacts at the very earlier stage of CICD Process.
					
			
			dev -> build -> unit test -> qa -> uat -> prod test(performance Testing)
					Monitor the prod environment : server/applications/traffic/networking/storage 
			
			Unit Testing is completely owned by developers == JUNIT 
			
			Testing Team ::		TestNG / Selenium Tools 
				QA 
					functional/regression/ testing 
			
				UAT User Acceptance Testing 
					Based on the LIVE Production Data.
			
			Telecomm Domain :::
			
				SP1 --> Introduce a new feature. 
				
					How end user can avail the offer ?
					
					Thru their outlets / website.
					
					Users - Business Users.
			
			Testing Tools :::
			
		Demo - Java maven Spring boot web application framework
		
			Spring Initializr		==> Web Service used to create Java Spring boot web application
				https://start.spring.io/
			Full stack developers
				As a developer, 
					1. create business application using java
					2. Create web application components using html, jsp, css 
					3. Integration of java and web to database.			
		
		MS .Net ==>  Framework 
				
				
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>www.loksaieta.com</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
</head>
<body>
  <div class="jumbotron" style="background-color:white">
      <img src="https://octodex.github.com/images/spidertocat.png" alt="Spidertocat"
           class="img-responsive center-block" style="width:250px"/>
      <h2 class="text-center">Hello Team</h2>
      <p class="text-center">Spring Boot Web Application </p>
  </div>
</body>
</html>


Next ::			
	
	Python ::

		Python Console Application
		Python Web Application 
		
	In Python, 
	
		Install python 
		Python IDEs like Pycharm*
			Install Visual Studio Code - https://code.visualstudio.com/download
			
		Fundamentals of Python.
	
	
	SQL ->
		
###############
14th Dec. 2023
###############		
	
	
	Python ::

		Python Console Application
		Python Web Application 
		
	In Python, 
	
		Install python 					==>	https://www.python.org/downloads/
		Python IDEs like Pycharm*
			Install Visual Studio Code 	==> https://code.visualstudio.com/download
			
		Fundamentals of Python.
		
		Python IDLE 
		
	Python --> 	Develop business Applications 
				Scripts to Automate the process
				
				
		Accessing Python using Visual Studio Code IDE.

			1. Install Python in Windows Machine/Mac 
			2. Install Visual Studio Code 
			3. Open VS Code 
			4. Install Python Extension(Microsoft) for VS Code.
				Go to file Menu --> Open folder
				
				save the python file as  script1.py / *.py
				
			Variable ::
			
				x=23
				
			scope of the variable :::
			
							local variable 
							
							global variable 
				
a=10  
b="Hi Python"  
c = 10.5  
print(type(a))  
print(type(b))  
print(type(c)) 


x=9				# Global Variable
sum()
{
	a=5			# Local 
	b=5
	c=a+b 
	print(x)
}
	
sum()
print(a)
print(x)	

	
###############
15th Dec. 2023
###############	
	
	Python ::
			
		Python Console Application
		Python Web Application 
		
		Vaiables ::
		
			Local & Global Variables :
			
			Identifiers / Literals 
			Keywords ==> Reserved variables

		Web site : Jenkins 
			access the user Login/registration process : 
			
			API --> Application Programming Interface 
				Send Request to Web Application using API Calls (Request)
				Response will be sent from the Application (JSON File/YAML File)
				
				
			sequential/flat file 
			XML File - It is composed of User defined Tags
			JSON & YAML == Both are composed of key and values (Key-Value Pair)
			
			Variables ::
				
				x=5
				
				x == y		# Yes / NO 
				
				a+ = b 		==> a = a + b
				
				if (a>b) and (a>c)
					print "value of a is greater than both b and c"
					
					
				in 		
				
				stud_Register_Numbers : {1001,1002,1003,1004,1005,1006}
				
				if (1002 not in stud_Register_Numbers)
					print "1002 exist"
				
				not in
			
			Array :::		===> Set 
			
				stud_Register_Numbers : {1001,1002,1003,1004,1005,1006}
			
			Dictionary ::
			
			Employee_Details {
				name : "xyz"
				Emp_ID : "1001"
				Payment {
					basic_pay : 12312312
					
				}
			}
				
			tuple 			()		==> Read-Only (1,2,"asdf","ADF") # Fixed List of elements	List of Months
			
			list 			[]		==> Editable  [1,2,"asdf",12,1] 	# variable list of elements 
			
											list[0]
			
			
			Dictionary 		{}		==> {sno:1001,sname:"xjhvjbjhyz",dept:"IT"}

			Set				{}		==> Should have only the unique values 
			
				stud_Register_Numbers : {1002,1001,1003,1004,1005,1006}
				
			Numeric :
					a = 5 			
			
			String ::
				
					a = "Hello"
					
					b = "Hello" 
					
					c = "Students *** $"
					
					d = '''Students' Database'''
					
			
	
	Next :: 
	
				Python Web Application :::
				
					- Web Application Framework 
					
							Django
							Flask 
	
				Flask Web Application Framework to craete python web application :
				
					1. Visual Studio Code 
					2. Create a Project Folder
					3. webapp.py 		# Import Flask in webapp.py
					4. Create templates folder 
							index.html 
							
					5. Open Terminal from VS Code 
					6. set FLASK_APP=sample
					7. python -m flask run
					
						localhost:5000
						
						http://127.0.0.1:5000

#app.py
				
from flask import Flask, render_template

app = Flask(__name__)

@app.route('/')

def sample():
	return render_template("sample.html")

if "__name__" == "__main__":
	app.run(debug=True)	


	

#sample.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>www.loksaieta.com</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
</head>
<body>
  <div class="jumbotron" style="background-color:white">
      <img src="https://octodex.github.com/images/spidertocat.png" alt="Spidertocat"
           class="img-responsive center-block" style="width:250px"/>
      <h2 class="text-center">Hello Team</h2>
      <p class="text-center">Python Web Application Demo </p>
  </div>
</body>
</html>	
	
	
Next :::

		Fundamentals of SQL :::

		Assignments - Module 2 - Java 	
		
		Module 3 
		
###############
18th Dec. 2023
###############	

		Structured Query Language - SQL 
		
			SQL ???
			
			
		Database Management System !
		
		Data!
		
			What is Data?
				- It is a raw fact - without any meaning!
				
			What is Information?
				- The Processed Data!
				
			India - Data! 
			
			India is a Country!
				

		File System ::
			Sequential Files!
			Key Sequential Files!
			
		Database Management System: 
		
		Relational Data!
		
		Table : Rows & Columns!
		
		DevOps Batch Students :
		
		Relational Database Management System: 
		
				- Used to Manage the relational Data
				- Maintains data integrity
				
			Eg.: 	My SQL 
					Oracle 
		
		Stud_Table:
		
		Stud_Reg_No		Stud_Name		Contact_Number		Department
		1001			xxxxxxxx		2222222222			IT 
		1002			yyyyyyyy		3333333333			CSE

		SQL ::: Structured Query Language
		
			Create the Business Applications 
			
				Microservice - 
				
					3 - Tier Application Architecture!
					
						User_Registration_Service:
						
						Front_End Layer		# used to interact with the Application
						
						Application Layer	# used to Process the Request 
						
						Back_End(DataBase)	# used to store or retrieve the data in/from Database
					
					
			SQL ::: Structured Query Language
			
					CRUD 
			
				Types of SQL Command :::
				
		Stud_Table:
		
		Stud_Reg_No		Stud_Name		Contact_Number		Department
		1001			xxxxxxxx		2222222222			IT 
		1002			yyyyyyyy		3333333333			CSE					
		1003			yyyyyyyy		3433333333			CSE	
		1004			yyyyyyyy		3353333333			CSE	
		1005			yyyyyyyy		3336333333			CSE	
		1006			yyyyyyyy		3333733333			CSE	
		
		
			1004 : 
			
				DQL -- Select Query :
				
		select * from stud_table where Stud_Reg_No = 1004;

		Stud_Reg_No		Stud_Name		Contact_Number		Department	
		1004			yyyyyyyy		3353333333			CSE	

		select Stud_Reg_No,Stud_Name,Contact_Number from stud_table where Stud_Reg_No = 1004;
		
		Stud_Reg_No		Stud_Name		Contact_Number	
        1004			yyyyyyyy		3353333333		
		
		select * from stud_table;
		
		Stud_Reg_No		Stud_Name		Contact_Number		Department
        1001			xxxxxxxx		2222222222			IT 
        1002			yyyyyyyy		3333333333			CSE			
        1003			yyyyyyyy		3433333333			CSE	
        1004			yyyyyyyy		3353333333			CSE	
        1005			yyyyyyyy		3336333333			CSE	
        1006			yyyyyyyy		3333733333			CSE	
		

				DDL :: Data Definition Language
				
					CREATE 
					ALTER 
					RENAME
					DROP 		# used to drop the table/database 
					
						drop table stud_table;
						
					TRUNCATE	# used to delete all the records from the table. NOT the Table Structure.
					
						truncate stud_table;	


			Product_Table :
			
				Product Name 		Brand
				Monitor 			Dell
				Monitor 			Dell
				Mouse				Dell 
				Keyboard 			Dell


		select * from stud_table where Stud_Reg_No = 1004;
		
		select * from stud_table where Stud_Dept LIKE 'C%';
		
		select * from stud_table;
		
		Stud_Reg_No		Stud_Name		Contact_Number		Department		EMail_ID
        1001			xxxxxxxx		2222222222			IT 				<null>
        1002			yyyyyyyy		3333333333			CSE				asdfasdf@asdf.com		
        1003			yyyyyyyy		3433333333			CSE				<null>
        1004			yyyyyyyy		3353333333			CSE				asdfasdasdfasdf@asdf.com 
        1005			yyyyyyyy		3336333333			CSE				<null>	
        1006			yyyyyyyy		3333733333			CSE				<null>
		
		SELECT Stud_Reg_No AS "Student Registration Number", Stud_Name AS "Student Name" FROM stud_table where Stud_Reg_No = 1004;;
		
		Student Registration Number		Student Name
        1004							yyyyyyyy
		
		
		drop 
		
		truncate : it used to delete all the records from a table
		
		DELETE FROM employees WHERE last_name = 'Doe';
		
		
		
		GRANT select ON employee_table TO developer1;
		
		REVOKE select ON employee_table FROM developer1;
		
UPDATE Employees
SET Salary = Salary * 1.10
WHERE Department = 'Sales';
savepoint 1

UPDATE Employees
SET Salary = Salary * 1.10
WHERE Department = 'Sales';
COMMIT;

UPDATE Employees
SET Salary = Salary * 1.10
WHERE Department = 'Sales';
COMMIT;

UPDATE Employees
SET Salary = Salary * 1.10
WHERE Department = 'Sales';
savepoint 2

rollback 2


Constraints  - Conditions :::			- used maintain the data integrity

	not null 
	primary key 
	check 
	foreign key 			== Referential Integrity
	default 
	unique 

	Join the records from more than one table -->
	
	subqueries -->
	
	
	Database is a collection of tables.
	
	Table is a collection of rows and columns.
	
	Employee_Database 
	
		Emp_Basic_Details			Base Table - Parent Table 
		
			Emp_No			1001,1002,1003,1004,1005	==> Unique, Not Null (Primary key)
			Emp_Name		XXXXX,EEEEE,RRRRR,QQQQQQ	==> Not Null
			Phone_Number	222222,3333333,444444,4444	==> Unique,Not Null
			DOB					15/12/1899				==> not_null,check 
			EMail_ID 										Unique,Not Null
			Address
			Department 
			Designation
		
		1001, ZZZZZZ

		
		Emp_Salary_Details 			Child Table 	- Integrity of Child Table 
		
			Emp_no 
			Emp_name 
			Basic_Pay
			HRA 
			DA 
			Net_pay 
			Gross_pay		
	
		1001, ZZZZZZ, 50000,.............
			1003, adfasdfs 45000,............	


			select a.emp_no,a.emp_name,b.basic_pay,b.gross_pay from Emp_Basic_Details a, Emp_Salary_Details b where a.emp_no = b.emp_no
		
		select statement within a select statement
		
		
		delete from emp_table where emp_no = 1004;
		
		truncate emp_table;		delete the records not the table structure.
		
		drop -- will delete the table along with the records.
		
	
		insert query to insert the records into the table ??
		
		
		Emp_Project_Details 
		
			Emp_No 
			Emp_Name 
			Proj_ID 
			Proj_Name
			Cust_Name 
			Proj_Duration
			Account
	
Next ::
		Install SQL Server 
		work with SQL 
		
		
###############
19th Dec. 2023
###############	

		Install SQL Server 
		
				https://www.microsoft.com/en-in/sql-server/sql-server-downloads
				
				https://learn.microsoft.com/en-us/sql/ssms/download-sql-server-management-studio-ssms?view=sql-server-ver16&redirectedfrom=MSDN
				
				SQL Server Express Edition!
				
				https://www.sqlzoo.net/wiki/SQL_Tutorial
		
		work with SQL 
		
			- SQL --
			
			Database is a collection of tables.
			
			Table is a collection of rows and columns.	


			Employees Details:
			
			Employee_Database:			
				Tables:
					Emp_Basic_Details
					Emp_Salary_Details
					Emp_Project_Details
					
			Students_Database:			
				Tables:
					Stud_Basic_Details
					Course_Details
					Placement_Details		

			Normalization!
			
			
			sname	--> char(20)	# reserves 20 bytes to this field.
			xxxxxx
			
			sname  	--> varchar(20)	#	20 means the maximum size 
			xxxxxx							6 bytes
			
			
			
			Sequential File 
			
			Indexed file 
			
			
			Tables :::
				
				index the field 
				set primary key to the field 
				
				
	Module 2 :::
	
		Application Development process!
		Development Tools!
		How the Application is developed, compiled and packaged as executables!
			Tools Stack ?
				
			Eclipse IDE 
			Maven - Build Tools 
				Compile/create artifacts/testing
				Maven Goals 
					compile 
					test		unit testing 
					package -- compile, test, create artifacts 
					
				POM.xml 
			tomcat - web app server 
			
			Python - VSCode/Pycharm IDEs 
				flask/django web app framework 
				
				
		Development and DevOps Role / process!
		
		
		Development :::
		
		
		AppTeam :
					Java We Applications.
					
			Local Machine 
				Install : Eclipse/JDK/GIT 
				Create Project using Eclipse 							# 3-tier Application 
				Use Maven kind of tool to compile and create artifacts 
				Test : Unit Testing 
				Integrate Tomcat with Eclipse 
					run the application using Tomcat in web browser 
					
			Promote the code to target environments! 
			
		DevOps :	Team automate the process of CI/CT/CD
			
			
				1. Developers will update the source code in the source code repository!
				2. Usind DevOps Automation(Jenkins) - 
						perform :
							Automated build 
							Automated Unit testing 
							Automated Code Promotion to Test Environments 
							Automated Production Deployments
				
					
	Assignments : Module 2 -		
			
